#This is the master file for the app 

#Username Validation 

#Welcome message
print('Welcome to the Hult Social Hub! You are one click away from your fellow Hultians!')
print('Please, insert username.')


#if statement to check for the requirement, the email address has to be a Hult email.
username = input('Username: ')
if '@student.hult.edu' in username: 
    print('Valid Username')
else:
    print('Username is not valid')
    print(input('Please enter again: '))
    #Last line asks for the username again, in case the privous attempted was invalid.
    
###############################################################
#Function Pool 

def upper(password):
"""Function to list the upper-case letters to be used in the password."""
    upper = 0 
    upperList = "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z".split()
    for char in password:
        if char in upperList:
            upper += 1
    if upper > 0:def upper(password):
    upper = 0 
    upperList = "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z".split()
    for char in password:
        if char in upperList:
            upper += 1
    if upper > 0:
        return True
    else:
        return False
   
def lower(password):
"""Function to list the lower-case letters to be used in the password."""
    lowers = 0
    lowerList = "a b c d e f g h i j k l m n o p q r s t u v w x y z".split()
    for char in password:
        if char in lowerList:
            lowers += 1
    if lowers > 0:
        return True
    else:
        return False
        
        
def number(password):
"""Function to list the numbers to be used in the password."""
    numbers = 0
    numberList = "1 2 3 4 5 6 7 8 9 0".split()
    for char in password:
        if char in numberList:
            numbers += 1
    if numbers > 0:
        return True
    else:
        return False
        
    
def length (password):
"""Function to limit the min number of characters to be used in the password, in our case eight."""
    if len(password) >= 8:
        return True
    else:
        return False
        
from datetime import datetime
"""This function sets the paramethers for the date of birth input. It limits the format and makes you try again in case you don't meet the right format."""
def date_of_birth():
    DateOfBirth = input("Enter your Date of Birth (MM.DD.YYYY): ")
    
    try:
        dateofbirthcheck=datetime.strptime(DateOfBirth, '%m.%d.%Y')
    
    except ValueError:
        print("PLEASE use the correct format which is MM.DD.YYYY")
        x = input("Press 1 to try again")
        
        if '1' in x or 'try again' in x:
            date_of_birth()
        
        else:
            exit(0)
        
    return DateOfBirth
 #####################################################################################       
password = input("Enter desired password: ")

while True:
    if upper(password) and lower(password) and number(password) and length(password) == True: 
        print("Password is valid, thank you!")
        break         
    elif upper(password) == False or lower(password) == False or number(password) or length(password) == False: 
            print ("Invalid password! Please try again\n")
            password = input("Enter desired password: ")
            print("Password is valid, thank you!")
            break
            
        return True
    else:
        return False
 
 #####################################################################################       
 newUser = []
 #####################################################################################       


#import packages for the following code
import pandas as pd

print(newUser)
df = pd.DataFrame.from_dict(newUser)

df.to_excel('profile_info.xlsx')

#the start of the inputs, where we get the infomation, begins here
FirstName=str(input("Enter your First name: "))
LastName=str(input("Enter your Last name: "))

#checking if the date format is correct before taking it to the database
def date_of_birth():
    DateOfBirth = input("Enter your Date of Birth (MM.DD.YYYY): ")
    
    try:
        dateofbirthcheck=datetime.strptime(DateOfBirth, '%m.%d.%Y')
    
    except ValueError:
        print("PLEASE use the correct format which is MM.DD.YYYY")
        x = input("Press 1 to try again")
        
        if '1' in x or 'try again' in x:
            date_of_birth()
        
        else:
            exit(0)
        
    return DateOfBirth

date_of_birth()


print(DateOfBirth)


#continuation of the questionnaire after the date has been verified

Nationality= str(input("What is your nationality?: "))
CountryOfBirth= str(input("Hm, and where were you born?: "))
Languages= str(input("What languages do you speak?: "))
Description= str(input("Tell us about yourself: "))
print("When did you enroll into Hult?: ")

#HULT was established in 2007
#if a use will mess with the year, the program is going to say that it's wrong

Enrollment = int(input('Enrollment: '))

if Enrollment > 2006 and Enrollment <= 2019:
    print(Enrollment)
elif Enrollment > 2019:
    print('Something went wrong...')

elif Enrollment <= 2006:
    print('Something went wrong...')
else:
    print ('Error')

 #####################################################################################       


#SAMMY CURRY MAKING AFTER PROFILE IS CREATED TO ADD LINKS
#After all input it prints out back to them their infomation aswell as their bio

print(f"""
Dear {FirstName} {LastName}, 
\tThank you for signing up to Hult social hub 
    I see that you joined Hult in {Enrollment}.

To make your profile better we have added what you entered about yourself to your bio! \n' {Description}'. 

 
You can also add you social medias to your profile, so other Hult students can find you on other platforms!
""") 

#this gives the option for them to input social medias and find out if they want to or not
SocialMedias= input('Would you like to add your social medias to your profile? type y if yes and n if no: ')


#if entered y or n it will print the following, y will make another enter box to copy and paste links into
if SocialMedias == 'y':
    print(input('Copy and paste your social media links here. They will show up under your bio for people to see!: '))
elif SocialMedias == 'n':
    print('No worries, you can always add them later!')

########################################################
newUser.append({'UserID':FirstName + LastName,
               'Date_of_birth': DateOfBirth,
               'Nationality': Nationality,
               'Country': CountryOfBirth,
               'Languages': Languages,
               'Description': Description,
               'Enrollment': Enrollment})


profile_info = df.append(newUser, 
                        ignore_index = True)
profile_info.to_excel('profile_info.xlsx', 
                     index = False)
                     
########################################################
profile_info
########################################################
choices = []
########################################################
tags = ['sports', 'soccer', 'football', 'biking', 'hike', 'cars','gym', 'walk', 'fitness', 'travel','beach',
        'family', 'animals','shopping', 'socializing','social media', 'nightclubs','sleeping', 'cooking', 
        'food', 'concerts','art','books', 'theater', 'dance', 'movies', 'gaming', 'music']
#Input for each user to add
choice_tags_list = []
##############################
print("Please select all tags you like. ")


for tag in tags: 
    print(tags.index(tag)+1, tag)

choice_count = 0
while choice_count < 5:
    choice = int(input("Enter number of choice: "))
    choice_tags_list.append(choice) 
    choice_count += 1
print(choice_tags_list)
total = sum(choice_tags_list)
if total > 130:
    print("Error. You selected tags that are non-existent.")
print(total)
########################################################
choice_tags_list.append(total)
choices.append(choice_tags_list)
print(choices)
########################################################
user_tags = {}
########################################################
for index, row in profile_info.iterrows():
    for choice in choice_tags_list: 
        user_tags [row['UserID']] = choices[index]

print(user_tags)
########################################################
userID = []
for key, value in user_tags.items():
    userID.append(key)
########################################################
userID
 ########################################################
 tag1 = []
tag2 = []
tag3 = []
tag4 = []
tag5 = []
tags_sum = []

for user, tags in user_tags.items():
    tag1.append(tags[0])
    tag2.append(tags[1])
    tag3.append(tags[2])
    tag4.append(tags[3])
    tag5.append(tags[4])
    tags_sum.append(tags[5])
########################################################
print(tag1,tag2,tag3,tag4,tag5,tags_sum)
########################################################
df_temp = dict({"tag1": tag1,
                "tag2": tag2,
                "tag3": tag3,
                "tag4": tag4,
                "tag5": tag5,
                "sum": tags_sum})

tag_data = pd.DataFrame(df_temp)
tag_data.index = userID
#tag_data = tag_data.transpose()
tag_data
########################################################
sum_values = (tag_data.loc[:, ["sum"]])
print(sum_values)
########################################################
temp = 0
group1 = {}
group2 = {}
group3 = {}
group4 = {}

index = 0
for item in tags_sum:
    if item <= 32:
        group1[userID[index]] = item
    elif item <= 64:
        group2[userID[index]] = item
    elif item <= 96:
        group3[userID[index]] = item
    else:
        group4[userID[index]] = item
    index+=1
print(group1)
print(group2)
print(group3)
print(group4)
########################################################
import random

index = 0
while group1: 
    if index < len(group1):
        pair1 = random.choice(list(group1.keys()))
        pair2 = random.choice(list(group1.keys()))
        while pair2 == pair1: 
            pair2 = random.choice(list(group1.keys()))
        print(f"""hey {pair1} you have similar interests with {pair2}""")
        index +=2
        break

index = 0
while group2: 
    if index < len(group2):
        pair1 = random.choice(list(group2.keys()))
        pair2 = random.choice(list(group2.keys()))
        while pair2 == pair1: 
            pair2 = random.choice(list(group2.keys()))
        print(f"""hey {pair1} you have similar interests with {pair2}""")
        index +=2
        break
    
index = 0
while group3: 
    if index < len(group3):
        pair1 = random.choice(list(group3.keys()))
        pair2 = random.choice(list(group3.keys()))
        while pair2 == pair1: 
            pair2 = random.choice(list(group3.keys()))
        print(f"""hey {pair1} you have similar interests with {pair2}""")
        index +=2
        break
    
index = 0
while group4: 
    if index < len(group4):
        pair1 = random.choice(list(group4.keys()))
        pair2 = random.choice(list(group4.keys()))
        while pair2 == pair1: 
            pair2 = random.choice(list(group4.keys()))
        print(f"""hey {pair1} you have similar interests with {pair2}""")
        index +=2
        break
########################################################
                    
